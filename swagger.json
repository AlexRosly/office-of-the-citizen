{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "office-of-the-citizen",
    "description": "Showing API for office of the citizen ",
    "licence": {
      "name": "Office of the Citizen",
      "URL": "https://office-of-the-citizen.onrender.com"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://office-of-the-citizen.onrender.com" },
    { "url": "http://localhost:4700" }
  ],
  "tags": [
    {
      "name": "Citizen",
      "description": "Endpoints for singUp, singIn, logOut and delete citizen's account"
    },
    {
      "name": "Application",
      "description": "Endpoints for fixed citizen's choise"
    }
  ],
  "paths": {
    "/citizen/get-secret-code": {
      "post": {
        "tags": ["Citizen"],
        "summary": "Get secret code for singUp",
        "requestBody": {
          "required": "true",
          "description": "Get secret code",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSecretCodeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSecretCodeResponse"
                }
              }
            }
          },
          "432": {
            "description": "This email ${email} is already existed in Citizen collection",
            "content": {}
          }
        }
      }
    },
    "/citizen/create-new-citizen": {
      "post": {
        "tags": ["Citizen"],
        "summary": "sing Up citizen",
        "requestBody": {
          "description": "create new account of the citizen",
          "required": "true",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewCitizenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewCitizenResponse"
                }
              }
            }
          },
          "435": {
            "description": "secret code is wrong",
            "content": {}
          },
          "436": {
            "description": "secret code is invalid",
            "content": {}
          }
        }
      }
    },
    "/citizen/check-citizen": {
      "patch": {
        "tags": ["Citizen"],
        "summary": "Get secret code on email for singIn",
        "requestBody": {
          "required": "true",
          "description": "Get secret code",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSecretCodeSingInRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSecretCodeSingInResponse"
                }
              }
            }
          },
          "409": {
            "description": "This email does not exist in Users collection",
            "content": {}
          }
        }
      }
    },
    "/citizen/citizen-sign-in": {
      "patch": {
        "tags": ["Citizen"],
        "summary": "citizen sing in",
        "requestBody": {
          "required": "true",
          "description": "Sing in",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/SingInCitizenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSecretCodeSingInResponse"
                }
              }
            }
          },
          "409": {
            "description": "This email does not exist in DB",
            "content": {}
          },
          "435": {
            "description": "Code is wrong",
            "content": {}
          },
          "436": {
            "description": "Code is invalid",
            "content": {}
          }
        }
      }
    },
    "/citizen/remove-citizen": {
      "delete": {
        "tags": ["Citizen"],
        "summary": "delete citizen account",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "delete citizen's account",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCitizenRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCitizenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Citizen App doesn't remove, try later",
            "content": {}
          },
          "435": {
            "description": "Citizen account doesn't remove, try later",
            "content": {}
          }
        }
      }
    },
    "/citizen/log-out": {
      "get": {
        "tags": ["Citizen"],
        "summary": "logOut citizen from account",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "logOut citizen from account",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/logOutCitizenRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/logOutCitizenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/application/application-for-house-construction": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about land for house construction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "Sing in",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/houseConstructionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/houseConstructionResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-cottage-construction": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about land for cottage construction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "Sing in",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/cottageConstructionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/cottageConstructionResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-garage-construction": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about land for garage construction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "Sing in",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/garageConstructionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/garageConstructionResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-land-for-gardening": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about land for gardening",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "Sing in",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/landForGardeningRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/landForGardeningResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-land-for-farming": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about land for farming",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "Sing in",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/landForFarmingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/landForFarmingResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-part-income": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about part income",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "part income",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/partIncomeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/partIncomeResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-consular-services-abroad": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about consular services abroad",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "consular services abroad",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/consularServicesAbroadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/consularServicesAbroadResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-withdrawal-from-citizenship": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about withdrawal from citizenship",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "withdrawal from citizenship",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/withdrawalFromCitizenshipRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/withdrawalFromCitizenshipResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    },
    "/application/application-for-go-abroad": {
      "post": {
        "tags": ["Application"],
        "summary": "fixed citizen's choise about go abroad",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": "true",
          "description": "go abroad",
          "content": {
            "applcation/json": {
              "schema": {
                "$ref": "#/components/schemas/goAbroadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "applcation/json": {
                "schema": {
                  "$ref": "#/components/schemas/goAbroadResponse"
                }
              }
            }
          },
          "436": {
            "description": "The application was not accepted",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetSecretCodeRequest": {
        "type": "object",
        "required": ["firstName", "lastName", "middleName", "email"],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "first name",
            "example": "Ivan"
          },
          "lastName": {
            "type": "string",
            "description": "surname",
            "example": "Ivanov"
          },
          "middleName": {
            "type": "string",
            "description": "middle name",
            "example": "Ivanovich"
          },
          "email": {
            "type": "string",
            "description": "citizen email",
            "format": "email",
            "example": "neloxom159@neixos.com"
          }
        }
      },
      "GetSecretCodeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "message": {
            "type": "string",
            "description": "message",
            "example": "Confirmation code sent to himosa5997@qiradio.com"
          }
        }
      },
      "CreateNewCitizenRequest": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "middleName",
          "email",
          "secretCode"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "first name",
            "example": "Ivan"
          },
          "lastName": {
            "type": "string",
            "description": "surname",
            "example": "Ivanov"
          },
          "middleName": {
            "type": "string",
            "description": "middle name",
            "example": "Ivanovich"
          },
          "email": {
            "type": "string",
            "description": "citizen email",
            "format": "email",
            "example": "neloxom159@neixos.com"
          },
          "secretCode": {
            "type": "number or string",
            "description": "secret code was send to citizen email",
            "example": "123456"
          }
        }
      },
      "CreateNewCitizenResponse": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "middleName",
          "email",
          "secretCode"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "citizen id",
            "example": "664c6c7311dad8cf6fbf5beb"
          },
          "firstName": {
            "type": "string",
            "description": "first name",
            "example": "Ivan"
          },
          "lastName": {
            "type": "string",
            "description": "surname",
            "example": "Ivanov"
          },
          "middleName": {
            "type": "string",
            "description": "middle name",
            "example": "Ivanovich"
          },
          "email": {
            "type": "string",
            "description": "citizen email",
            "format": "email",
            "example": "neloxom159@neixos.com"
          },
          "secretCode": {
            "type": "number",
            "description": "secret code was send to citizen email",
            "example": "123456"
          },
          "status": {
            "type": "string",
            "description": "status of the citizen",
            "example": "registered"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "GetSecretCodeSingInRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "citizen email",
            "format": "email",
            "example": "neloxom159@neixos.com"
          }
        }
      },
      "GetSecretCodeSingInResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "message": {
            "type": "string",
            "description": "message",
            "example": "Confirmation code sent to himosa5997@qiradio.com"
          }
        }
      },
      "SingInCitizenRequest": {
        "type": "object",
        "required": ["email", "secretCode"],
        "properties": {
          "email": {
            "type": "string",
            "description": "citizen email",
            "format": "email",
            "example": "neloxom159@neixos.com"
          },
          "secretCode": {
            "type": "number or string",
            "description": "secret code was send to citizen email",
            "example": "123456"
          }
        }
      },
      "SingInCitizenResponse": {
        "type": "object",
        "required": ["firstName", "lastName", "middleName", "email", "token"],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "first name",
            "example": "Ivan"
          },
          "lastName": {
            "type": "string",
            "description": "surname",
            "example": "Ivanov"
          },
          "middleName": {
            "type": "string",
            "description": "middle name",
            "example": "Ivanovich"
          },
          "email": {
            "type": "string",
            "description": "citizen email",
            "format": "email",
            "example": "neloxom159@neixos.com"
          },
          "status": {
            "type": "string",
            "description": "status of the citizen",
            "example": "registered"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "DeleteCitizenRequest": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "DeleteCitizenResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "message": {
            "type": "string",
            "description": "message",
            "example": "Citizen account and application has been removed"
          }
        }
      },
      "logOutCitizenRequest": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "logOutCitizenResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "204"
          }
        }
      },
      "houseConstructionRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "houseConstructionResponse": {
        "type": "object",
        "required": ["fixed", "state"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          }
        }
      },
      "cottageConstructionRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "cottageConstructionResponse": {
        "type": "object",
        "required": ["fixed", "state"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          }
        }
      },
      "garageConstructionRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "garageConstructionResponse": {
        "type": "object",
        "required": ["fixed", "state"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          }
        }
      },
      "landForGardeningRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "landForGardeningResponse": {
        "type": "object",
        "required": ["fixed", "state"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          }
        }
      },
      "landForFarmingRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "landForFarmingResponse": {
        "type": "object",
        "required": ["fixed", "state"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "state": {
            "type": "string",
            "description": "citizen's state",
            "example": "Kyiv"
          }
        }
      },
      "partIncomeRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "partIncomeResponse": {
        "type": "object",
        "required": ["fixed"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          }
        }
      },
      "consularServicesAbroadRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "consularServicesAbroadResponse": {
        "type": "object",
        "required": ["fixed"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          }
        }
      },
      "withdrawalFromCitizenshipRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "withdrawalFromCitizenshipResponse": {
        "type": "object",
        "required": ["fixed"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          }
        }
      },
      "goAbroadRequest": {
        "type": "object",
        "properties": {
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          },
          "token": { "type": "string", "description": "User's token" }
        }
      },
      "goAbroadResponse": {
        "type": "object",
        "required": ["fixed"],
        "properties": {
          "status": {
            "type": "string",
            "description": "status of the request",
            "example": "success"
          },
          "fixed": {
            "type": "boolean",
            "description": "citizen's choise",
            "example": "true"
          }
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
}
